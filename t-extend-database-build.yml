parameters:
  - name: containerRegistry
    default: "utPLSQL-docker"
  - name: dockerRepo
    default: "gvenzl/oracle-xe"
  - name: utplsqlVersion
    default: ""
  - name: utplsqlDir
    default: ""
  - name: test_user
    default: ""
  - name: test_pwd
    default: ""
  - name: targetDatabases
    type: object
    default:
      - name: oracleVersion
        default: ""  
      - name: dockerOptions
        type: string
        default: "--shm-size=1g"
      - name: dockerPortMap
        type: string
        default: "1521"
      - name: connectionString
        default: ""        
      - name: scripts
        type: object
        default:
          - name: work_dir
            default: ""
          - name: user
            default: ""
          - name: password
            default: ""
          - name: script
            default: ""
          - name: displayName
            default: ""


steps:
- bash: |
    git clone --depth=1 --branch=${{ parameters.utplsqlVersion }} https://github.com/utPLSQL/utPLSQL.git ${{ parameters.utplsqlDir}}
    chmod -R go+w ${{ parameters.utplsqlDir}}
  displayName: 'Download utPLSQL'

- task: Docker@2
  displayName: Docker Login
  inputs:
    containerRegistry: ${{ parameters.containerRegistry }}
    command: 'login'
    addPipelineData: false
    addBaseImageData: false
               
- ${{ each trg_db in parameters.targetDatabases }}:
  - bash: |
      # download Oracle Database docker image from private repo and start the DB
      time docker pull ${{ parameters.dockerRepo }}:${{ trg_db.oracleVersion }}
      # start the docker container (DB)
      time docker run -d --name ${{ trg_db.oracleVersion }} ${{ trg_db.dockerOptions }} -p 1521:${{ trg_db.dockerPortMap }} ${{ parameters.dockerRepo }}:${{ trg_db.oracleVersion }}
      # Wait for DB startup
      time docker logs -f ${{ trg_db.oracleVersion }} | grep -m 1 "DATABASE IS READY TO USE!" --line-buffered
    displayName: 'Start Oracle DB Docker container: ${{ trg_db.oracleVersion }}'
                
  - ${{ each script in trg_db.scripts }}:
    - template: t-task-extend-sqlcl.yml
      parameters:
        work_dir: ${{ script.work_dir}}
        user: ${{ script.user}}
        password: ${{ script.password}}
        connectionString: ${{ trg_db.connectionString}}
        script: ${{ script.script}}
        displayName: ${{ script.displayName}}

  - template: t-task-extend-utplsqlcli.yml
    parameters:
      work_dir: $(Build.SourcesDirectory)
      connectionString: ${{ trg_db.connectionString}}
      test_user: ${{ parameters.test_user }}
      test_pwd: ${{ parameters.test_pwd }}
      source_path: "source"
      test_path: "test"
      options: "--debug --failure-exit-code=0"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit_test_results.xml'
      testRunTitle: 'Publish test results'
    displayName: 'Publish test results'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'cobertura.xml'
      pathToSources: 'source'
    displayName: 'Publish coverage'